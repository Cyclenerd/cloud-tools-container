name: "Latest image"

on:
  workflow_dispatch:
  schedule:
    - cron: '32 5 15 * *' # At 05:32 on day-of-month 15.

jobs:

  docker:
    name: Build container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Set up Docker Buildx 🔧
        # https://github.com/marketplace/actions/docker-setup-buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers 💾
        # https://github.com/marketplace/actions/cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub container registry 🏭
        # https://github.com/marketplace/actions/docker-login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image 🧪
        id: docker_build
        # https://github.com/marketplace/actions/build-and-push-docker-images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/cyclenerd/google-cloud-gcp-tools-container:test
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  docker-test:
    name: Test container image
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      # Run test
      - name: Pull test image 💿
        run: |
          docker pull ghcr.io/cyclenerd/google-cloud-gcp-tools-container:test
          docker tag ghcr.io/cyclenerd/google-cloud-gcp-tools-container:test google-cloud-gcp-tools-container
      - name: Images 📏
        run: |
          docker images
      # Tests
      - name: Test bash 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          bash --version
      - name: Test perl 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          perl --version
      - name: Test python3 📏
        run: |
          docker run google-cloud-gcp-tools-container \
            python3 --version
      - name: Test openssl 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          openssl version
      - name: Test gcloud 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          gcloud --version
      - name: Test gsutil 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          gsutil --version
      - name: Test bq 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          bq version
      - name: Test terraform 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          terraform --version
      - name: Test ansible 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          ansible --version
      - name: Test ansible-playbook 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          ansible-playbook --version
      - name: Test kubectl 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          kubectl help
      - name: Test helm 📏
        run: |
          docker run google-cloud-gcp-tools-container \
            helm version
      - name: Test curl 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          curl --version
      - name: Test git 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          git --version
      - name: Test tar 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          tar --version
      - name: Test jq 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          jq --version
      - name: Test mutt 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          mutt -v
      - name: Test dig 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          dig -v
      - name: Test ssh 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          ssh -V
      - name: Test skopeo 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          skopeo -v
      - name: Test gcr-cleaner-cli 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          gcr-cleaner-cli -version
      - name: Test fuego 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          fuego --version
      - name: Test shellcheck 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          shellcheck --version
      - name: Test terraform-docs 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          terraform-docs --version
      - name: Test tfsec 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          tfsec --version
      - name: Test tflint 📏
        run: |
          docker run google-cloud-gcp-tools-container \
          tflint --version
      - name: Test figlet 📏
        run: |
          docker run google-cloud-gcp-tools-container figlet GitHub && \
          docker run google-cloud-gcp-tools-container figlet -v

  container-scan:
    name: Container image scan
    runs-on: ubuntu-latest
    needs: [docker-test]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      # Scan with Grype vulnerability scanner
      # https://github.com/anchore/scan-action
      - name: Scan 🧐
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: "ghcr.io/cyclenerd/google-cloud-gcp-tools-container:test"
          # Do not fail to upload the SARIF report in the next step...
          fail-build: false
          severity-cutoff: critical
          output-format: sarif
      - name: Upload SARIF report 📤
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  github-registry-latest:
    name: Push image to GitHub
    runs-on: ubuntu-latest
    needs: [container-scan]
    steps:
      - name: Login to GitHub container registry 🏭
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull latest test image from GitHub container registry 📦
        run: docker pull ghcr.io/cyclenerd/google-cloud-gcp-tools-container:test
      - name: Push image to GitHub container registry as latest version 🚢
        run: |
          docker tag ghcr.io/cyclenerd/google-cloud-gcp-tools-container:test ghcr.io/cyclenerd/google-cloud-gcp-tools-container:latest
          docker push ghcr.io/cyclenerd/google-cloud-gcp-tools-container:latest

  docker-hub-latest:
    name: Push image to Docker Hub
    runs-on: ubuntu-latest
    needs: [container-scan]
    steps:
      - name: Login to Docker Hub registry 🏭
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Pull latest test image from GitHub container registry 📦
        run: docker pull ghcr.io/cyclenerd/google-cloud-gcp-tools-container:test
      - name: Push image to Docker Hub registry as latest version 🚢
        run: |
          docker tag ghcr.io/cyclenerd/google-cloud-gcp-tools-container:test cyclenerd/google-cloud-gcp-tools-container:latest
          docker push cyclenerd/google-cloud-gcp-tools-container:latest

  readme:
    name: Update README
    runs-on: ubuntu-latest
    needs: [docker-hub-latest, github-registry-latest]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Update 📰
        run: bash readme.sh